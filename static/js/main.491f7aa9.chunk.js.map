{"version":3,"sources":["serviceWorker.js","utils.js","Login.js","App.js","Game.js","GameLobby.js","index.js"],"names":["Boolean","window","location","hostname","match","getAccessToken","document","cookie","split","find","row","startsWith","Login","props","state","username","handleSubmit","bind","this","length","event","preventDefault","createAndLoginUser","fetch","process","method","mode","cache","credentials","headers","body","JSON","stringify","then","response","json","data","history","push","go","catch","error","console","InputLabel","htmlFor","Input","id","aria-describedby","autoFocus","type","onChange","e","setState","target","value","Button","block","bssize","disabled","validateForm","onClick","Component","withRouter","App","Game","startGame","gameId","params","GameLobby","newGame","listenEvents","a","EventSource","withCredentials","onmessage","log","getPlayers","players","requiredPlayers","useStyles","makeStyles","theme","ul","margin","padding","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","spacing","heroContent","cardHeader","backgroundColor","grey","cardPricing","display","justifyContent","alignItems","marginBottom","footer","borderTop","marginTop","paddingTop","paddingBottom","breakpoints","up","isLogged","classes","token","jwt","getToken","href","color","variant","className","Home","CssBaseline","AppBar","position","elevation","Toolbar","Typography","noWrap","Link","Container","maxWidth","component","basename","exact","path","Grid","container","justify","item","gutterBottom","Box","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.491f7aa9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import jwt from \"jwt-decode\";\n\nexport function getAccessToken() {\n    try {\n        const cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith('access_token='))\n            .split('=')[1];\n        return cookieValue\n    } catch {\n        return null\n    }\n}\n\nexport function getToken(token) {\n    if (token != null)\n        return jwt(token)\n    return null\n}","import React, { Fragment, Component } from \"react\";\nimport { Button, Input, InputLabel } from './imports';\nimport { withRouter } from 'react-router-dom';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.props = props\n    this.state = { username: \"\" }\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateForm() {\n    return this.state.username.length > 0\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    this.createAndLoginUser()\n  }\n\n  createAndLoginUser() {\n    // create user on api\n    fetch(process.env.REACT_APP_SERVER + 'player', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ 'name': this.state.username })\n    })\n      .then(response => response.json())\n      .then(data => {\n        // add cookie manually\n        document.cookie = \"access_token=\" + data[\"access_token\"];\n        this.props.history.push('/')\n        this.props.history.go()\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <InputLabel htmlFor=\"component-helper\">Username</InputLabel>\n        <Input\n          id=\"username\"\n          aria-describedby=\"component-helper-text\"\n          autoFocus\n          type=\"username\"\n          onChange={e => this.setState({ username: e.target.value })}\n        />\n        <Button block bssize=\"large\" disabled={!this.validateForm()} onClick={this.handleSubmit}>\n          Login\n        </Button>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(Login);","import { React, Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Fragment>\n                <h1>Home</h1>\n            </Fragment>\n        );\n    }\n}\nexport default withRouter(App);","import React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n\nclass Game extends Component {\n\n  constructor(props) {\n    super(props);\n    this.startGame = this.startGame.bind(this);\n    this.gameId = props.match.params.id\n}\n\n  render() {\n\n    return (\n      <Fragment>\n        <h1>GAME PAGE</h1>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(Game);","import React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { getAccessToken } from './utils';\nimport { Button } from './imports';\n\n\nclass GameLobby extends Component {\n\n  constructor(props) {\n    super(props);\n    this.startGame = this.startGame.bind(this);\n    this.newGame = this.newGame.bind(this);\n    this.gameId = props.match.params.id\n  }\n\n  componentDidMount() {\n    if (this.gameId == null)\n      this.newGame()\n    this.listenEvents()\n  }\n\n  async listenEvents() {\n    var evtSource = new EventSource(`${process.env.REACT_APP_SERVER}lobby/${this.gameId}`, {  headers: {\n      'Authorization': `Bearer ${getAccessToken()}`\n    }, withCredentials: true});\n    evtSource.onmessage = function (e) {\n      debugger\n      console.log(e.data)\n    }\n  }\n\n  requiredPlayers() {\n    try {\n      if (this.getPlayers().length >= 2)\n        return true\n    } catch (error) {\n      ;\n    }\n    return false\n  }\n\n  getPlayers() {    // create user on api\n    fetch(`${process.env.REACT_APP_SERVER}game/${this.gameId}`, {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${getAccessToken()}`\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        return data.players\n      }\n      )\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  newGame() {\n    debugger\n      fetch(process.env.REACT_APP_SERVER + 'game', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `Bearer ${getAccessToken()}`\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        let gameId = data.gameId\n        this.props.history.push(`/lobby/${gameId}`)\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  startGame(event) {\n    // create user on api\n    fetch(`${process.env.REACT_APP_SERVER}lobby/${this.gameId}`, {\n      method: 'PATCH',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: { 'Content-Type': 'application/json', \n      'Authorization': `Bearer ${getAccessToken()}` },\n    })\n      .then(response => response.json())\n      .then(this.props.history.push(`/game/${this.gameId}`))\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  render() {\n\n    return (\n      <Fragment>\n        <h1>Game lobby</h1>\n        <Button block bssize=\"large\" disabled={!this.requiredPlayers()} onClick={this.startGame} type=\"submit\">Start Game</Button>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(GameLobby);","import ReactDOM from 'react-dom';\nimport { HashRouter as Router, Switch, Route} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport { React, Fragment} from 'react';\nimport { AppBar, Button, CssBaseline, Grid, Toolbar, Typography, Link, Container, makeStyles, Box } from './imports';\nimport { getToken, getAccessToken } from './utils';\n\nimport Login from \"./Login\";\nimport App from \"./App\";\nimport Game from \"./Game\";\nimport GameLobby from './GameLobby';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\n\nfunction isLogged(classes) {\n  let token = getToken(getAccessToken())\n\n  if (token === null)\n    return <Button href={`${process.env.PUBLIC_URL}/#/login`} color=\"primary\" variant=\"outlined\" className={classes.link}>Login</Button>\n  return <Button disabled color=\"primary\" variant=\"outlined\" className={classes.link}>Logged as </Button>\n}\n\nexport default function Home() {\n  const classes = useStyles()\n  // eslint-disable-next-line \n  const token = isLogged(classes)\n\n\n  return (\n    <Fragment >\n      <CssBaseline />\n      <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>Uno Project</Typography>\n          <nav>\n            <Link variant=\"button\" color=\"textPrimary\" href={`${process.env.PUBLIC_URL}/#/lobby`} className={classes.link}>New Game</Link>\n          </nav>\n          {token}\n        </Toolbar>\n      </AppBar>\n      {/* \n      <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\n      </Container>\n      /* End hero unit */}\n      <Container maxWidth=\"md\" component=\"main\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path=\"/\">\n              <App />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/game/:id\">\n              <Game />\n            </Route>\n            <Route path=\"/lobby/:id\">\n              <GameLobby />\n            </Route>\n            <Route path=\"/lobby/\">\n              <GameLobby />\n            </Route>\n          </Switch>\n        </Router>\n      </Container>\n      {/* Footer */}\n      <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n        <Grid container justify=\"space-evenly\">\n          <Grid item key=\"title\">\n            <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n            </Typography>\n            <ul>\n              <li key=\"item\">\n                <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">bla vbl</Link>\n              </li>\n            </ul>\n          </Grid>\n        </Grid>\n        <Box>\n        </Box>\n      </Container>\n      {/* End footer */}\n    </Fragment>\n  );\n}\n\n\nReactDOM.render(\n  <Home />,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: \n\nserviceWorker.unregister();\n"],"sourceRoot":""}